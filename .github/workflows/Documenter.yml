name: Documenter

on:
  push:
    branches:
      - main # update to match your development branch (master, main, dev, trunk, ...)
    tags: ['*']
  pull_request:

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: write
  pages: write
  id-token: write
  statuses: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: pages
  cancel-in-progress: false

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Setup Julia
        uses: julia-actions/setup-julia@latest
      - name: Pull Julia cache
        uses: julia-actions/cache@v2
      - name: Install dependencies
        run: julia --project=docs/ -e 'using Pkg; Pkg.develop(PackageSpec(path=pwd())); Pkg.instantiate()'
      - name: Build and deploy
        uses: julia-actions/julia-docdeploy@v1
        with:
          #install-package: false
          prefix: xvfb-run
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # If authenticating with GitHub Actions token
          DOCUMENTER_KEY: ${{ secrets.DOCUMENTER_KEY }} # If authenticating with SSH deploy key
          JULIA_DEBUG: "Documenter"
          DATADEPS_ALWAYS_ACCEPT: true
        #run: julia --project=docs/ docs/make.jl
